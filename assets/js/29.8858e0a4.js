(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{387:function(t,e,s){"use strict";s.r(e);var a=s(44),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"papermill-execute-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#papermill-execute-task"}},[t._v("#")]),t._v(" Papermill Execute Task")]),t._v(" "),s("p",[t._v("This task populates a "),s("code",[t._v(".ipynb")]),t._v(" file with outputs for each cell.")]),t._v(" "),s("p",[t._v("Added since v0.10.0.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("This feature requires installing jupyterlab and papermill:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" runflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("papermill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"example-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),s("ul",[s("li",[t._v("Set task type to "),s("code",[t._v("papermill_execute")]),t._v(".")]),t._v(" "),s("li",[t._v("Set "),s("code",[t._v("input_path")]),t._v(", "),s("code",[t._v("output_path")]),t._v(" and "),s("code",[t._v("parameters")]),t._v(".")])]),t._v(" "),s("div",{staticClass:"language-hcl extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hcl"}},[s("code",[t._v("flow "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"papermill_example"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),s("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "output_dir" ')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  task "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"papermill_execute"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("input_path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examples/sysexit0.ipynb"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("output_path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token type variable"}},[t._v("output_dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/sysexit0-out.ipynb"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("Click me to view the run output")]),t._v(" "),s("p",[t._v("Run:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ runflow run examples/papermill_example.hcl\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":45:01,075"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.papermill_execute.this"')]),t._v(" is started.\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":45:01,076"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Input Notebook:  examples/sysexit0.ipynb\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":45:01,076"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Output Notebook: /tmp/sysexit0-out.ipynb\nExecuting:   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("%"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("00:0"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("0")]),t._v("<")]),t._v("?, ?cell/s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":45:02,494"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Executing notebook with kernel: python3\nExecuting:  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("67")]),t._v("%"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("█████████████▎      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("/3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("00:0"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v("<")]),t._v("00:00,  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".30cell/s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-12 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":45:02,649"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.papermill_execute.this"')]),t._v(" is successful.\n")])])])]),t._v(" "),s("h2",{attrs:{id:"arguments-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arguments-reference"}},[t._v("#")]),t._v(" Arguments Reference")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("input_path")]),t._v(" - (Required, str or Path) Path to input notebook.")]),t._v(" "),s("li",[s("code",[t._v("output_path")]),t._v(" - (Required, str or Path) Path to save executed notebook")]),t._v(" "),s("li",[s("code",[t._v("parameters")]),t._v(" - (Optional, map) Arbitrary keyword arguments to pass to the notebook parameters")]),t._v(" "),s("li",[s("code",[t._v("engine_name")]),t._v(" - (Optional, str) Name of execution engine to use")]),t._v(" "),s("li",[s("code",[t._v("request_save_on_cell_execute")]),t._v(" - (Optional, bool) Request save notebook after each cell execution")]),t._v(" "),s("li",[s("code",[t._v("autosave_cell_every")]),t._v(" - (Optional, int) How often in seconds to save in the middle of long cell executions")]),t._v(" "),s("li",[s("code",[t._v("prepare_only")]),t._v(" - (Optional, bool) Flag to determine if execution should occur or not")]),t._v(" "),s("li",[s("code",[t._v("kernel_name")]),t._v(" - (Optional, str) Name of kernel to execute the notebook against")]),t._v(" "),s("li",[s("code",[t._v("language")]),t._v(" - (Optional, str) Programming language of the notebook")]),t._v(" "),s("li",[s("code",[t._v("progress_bar")]),t._v(" - (Optional, bool) Flag for whether or not to show the progress bar.")]),t._v(" "),s("li",[s("code",[t._v("log_output")]),t._v(" - (Optional, bool) Flag for whether or not to write notebook output to the configured logger")]),t._v(" "),s("li",[s("code",[t._v("start_timeout")]),t._v(" - (Optional, int) Duration in seconds to wait for kernel start-up")]),t._v(" "),s("li",[s("code",[t._v("report_mode")]),t._v(" - (Optional, bool) Flag for whether or not to hide input.")]),t._v(" "),s("li",[s("code",[t._v("cwd")]),t._v(" - (Optional, str or Path) Working directory to use when executing the notebook")]),t._v(" "),s("li",[s("code",[t._v("engine_config")]),t._v(" - (Optional, map) Arbitrary keyword arguments to pass to the notebook engine")])]),t._v(" "),s("h2",{attrs:{id:"attributes-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attributes-reference"}},[t._v("#")]),t._v(" Attributes Reference")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("notebook")]),t._v(" - The notebook object.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);