(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{384:function(t,s,e){"use strict";e.r(s);var a=e(44),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"hcl2-template-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hcl2-template-task"}},[t._v("#")]),t._v(" Hcl2 Template Task")]),t._v(" "),e("p",[t._v("Hcl2 Template task enables rendering source with given context.")]),t._v(" "),e("p",[t._v("Added in v0.3.0.")]),t._v(" "),e("h2",{attrs:{id:"example-usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: template.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),e("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "global" ')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hcl2_template"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the source for the template.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can interpolate variable via `${...}` syntax.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token heredoc string"}},[t._v("<<EOT\n${ answer }\n${ final.answer }\n${ var.global }\n${ 40 + 2 }\n${ sum([20, 20, 2]) }\nEOT")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the context for the template rendering.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It will be merged with global context.")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("context")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.hcl2_template.this.content\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ runflow run examples/template.hcl --var "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-12 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":19:34,003"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.template.this"')]),t._v(" is started.\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-12 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":19:34,003"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.template.this"')]),t._v(" is successful.\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-12 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":19:34,017"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is started.\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-12 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":19:34,022"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is successful.\n")])])])]),t._v(" "),e("h2",{attrs:{id:"argument-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),e("p",[t._v("The following arguments are supported:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("source")]),t._v(" - (Required, str) The template string.")]),t._v(" "),e("li",[e("code",[t._v("context")]),t._v(" - (Optional, map) The context for rendering the template. The context will be merged with global execution context so you are free to use something like "),e("code",[t._v("${task.bash_run.TASK_NAME.stdout}")]),t._v(" in the source.")])]),t._v(" "),e("h2",{attrs:{id:"attributes-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#attributes-reference"}},[t._v("#")]),t._v(" Attributes Reference")]),t._v(" "),e("p",[t._v("The following attributes are supported:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("content")]),t._v(" - The rendered content.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);