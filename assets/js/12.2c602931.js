(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{370:function(a,t,s){"use strict";s.r(t);var e=s(44),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"development"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[a._v("#")]),a._v(" Development")]),a._v(" "),s("h2",{attrs:{id:"build-package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-package"}},[a._v("#")]),a._v(" Build Package")]),a._v(" "),s("p",[a._v("To build the package, run")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ python -mbuild\n")])])]),s("h2",{attrs:{id:"auto-format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auto-format"}},[a._v("#")]),a._v(" Auto-format")]),a._v(" "),s("p",[a._v("To auto-format the code, run")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" style\n")])])]),s("h2",{attrs:{id:"lint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint"}},[a._v("#")]),a._v(" Lint")]),a._v(" "),s("p",[a._v("To perform code quality check, run")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" lint\n")])])]),s("h2",{attrs:{id:"test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test"}},[a._v("#")]),a._v(" Test")]),a._v(" "),s("p",[a._v("To test the project, run")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\n")])])]),s("h2",{attrs:{id:"type-check"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-check"}},[a._v("#")]),a._v(" Type Check")]),a._v(" "),s("p",[a._v("To check the types, run")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("type")]),a._v("\n")])])]),s("h2",{attrs:{id:"make"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#make"}},[a._v("#")]),a._v(" Make")]),a._v(" "),s("p",[a._v("The default make command is equivalent to "),s("code",[a._v("make style type lint test")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v("\n")])])]),s("h2",{attrs:{id:"modify-lark-grammar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modify-lark-grammar"}},[a._v("#")]),a._v(" Modify Lark Grammar")]),a._v(" "),s("p",[a._v("If the lark grammar file "),s("code",[a._v("runflow/hcl2.lark")]),a._v(" is modified, please re-generate the parser module:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" hcl2\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" runflow/hcl2.lark\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" runflow/hcl2_parser.py\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hcl2: which part of grammar is change?'")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);