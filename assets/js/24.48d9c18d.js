(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{382:function(t,s,e){"use strict";e.r(s);var a=e(44),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"file-write-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-write-task"}},[t._v("#")]),t._v(" File Write Task")]),t._v(" "),e("p",[t._v("File Write task enables writing string content into a file.")]),t._v(" "),e("p",[t._v("Added in v0.3.0.")]),t._v(" "),e("h2",{attrs:{id:"example-usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),e("p",[t._v("Set attribute "),e("code",[t._v("filename")]),t._v(" and "),e("code",[t._v("content")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_write.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/file_write.txt"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo bar"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ runflow run file_write.hcl\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-18 00:23:21,737"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is started.\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-18 00:23:21,740"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is successful.\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /tmp/file_write.txt\nfoo bar\n")])])])]),t._v(" "),e("h2",{attrs:{id:"output-values-to-terminal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#output-values-to-terminal"}},[t._v("#")]),t._v(" Output Values to Terminal")]),t._v(" "),e("p",[t._v("Output values to terminal can be helpful on troubleshooting.")]),t._v(" "),e("p",[t._v("By using File Write Task with "),e("code",[t._v('"/dev/stdout"')]),t._v(" as filename, you\ncan output the information to the terminal.")]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_write_stdout.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write_stdout"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" tojson("),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("web_proxy")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("proxy_host")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("proxy_port")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8964")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(")\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ runflow run file_write_stdout.hcl\n[2021-06-18 00:22:37,270] "task.file_write.this" is started.\n{"web_proxy": {"proxy_host": "127.0.0.1", "proxy_port": 8964}}\n[2021-06-18 00:22:37,270] "task.file_write.this" is successful.\n')])])])]),t._v(" "),e("h2",{attrs:{id:"write-binary-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#write-binary-data"}},[t._v("#")]),t._v(" Write Binary Data")]),t._v(" "),e("p",[t._v("Use argument "),e("code",[t._v("b64content")]),t._v(" to write binary data into a file.")]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_write_b64.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write_b64"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/out.txt"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("b64content")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aGVsbG8gd29ybGQK"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ runflow run examples/file_write_b64.hcl\n[2021-07-02 15:01:18,087] "task.file_write.this" is started.\n[2021-07-02 15:01:18,089] "task.file_write.this" is successful.\n\n$ cat /tmp/out.txt\nhello world\n')])])])]),t._v(" "),e("h2",{attrs:{id:"argument-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),e("p",[t._v("The following arguments are supported:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("filename")]),t._v(" - (Required, str) The path to file to write.")]),t._v(" "),e("li",[e("code",[t._v("content")]),t._v(" - (Optional, str) The content to write. One of "),e("code",[t._v("content")]),t._v(" and "),e("code",[t._v("b64content")]),t._v(" must be provided.")]),t._v(" "),e("li",[e("code",[t._v("b64content")]),t._v(" - (Optional, str) The base64-encoded content to write. One of "),e("code",[t._v("content")]),t._v(" and "),e("code",[t._v("b64content")]),t._v(" must be provided.")]),t._v(" "),e("li",[e("code",[t._v("fs")]),t._v(" - (Optional, map) The file system to write. If not set, local filesystem is used. Please check the filesystem for the arguments to set in the map:\n"),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/tasks/file-read.html#local-filesystem"}},[t._v("Local FileSystem")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/tasks/file-read.html#ftp-filesystem"}},[t._v("FTP FileSystem")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/tasks/file-read.html#git-filesystem"}},[t._v("Git FileSystem")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/tasks/file-read.html#github-filesystem"}},[t._v("GitHub FileSystem")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/tasks/file-read.html#zip-filesystem"}},[t._v("Zip FileSystem")])],1),t._v(" "),e("li",[t._v("More documentations for the other filesystems are on the way. ðŸ˜„")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);