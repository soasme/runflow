(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{393:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sql-row-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-row-task"}},[t._v("#")]),t._v(" Sql Row Task")]),t._v(" "),a("p",[t._v("Sql Row Task enables fetching rows from a sql database, such as sqlite3, MySQL, PostgreSQL, MSSQL, etc.")]),t._v(" "),a("p",[t._v('The task type is "sql_row".')]),t._v(" "),a("p",[t._v("Added in v0.5.0.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Please make sure you have the required driver package installed, such as MySQL-python or psycopg2.")]),t._v(" "),a("p",[t._v("Say you're using "),a("code",[t._v("postgresql")]),t._v(" database, you can install "),a("code",[t._v("psycopg2")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" psycopg2-binary\n")])])])]),t._v(" "),a("h2",{attrs:{id:"example-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: sqlite3_row")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sqlite3_row"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "db" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sqlite3://:memory:"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sql_row"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("dsn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.db\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("statement")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT * FROM kvdb where key=:key"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("parameters")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sql_row"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kall"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("dsn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.db\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sql")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("statement")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT * FROM kvdb limit 20"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"out"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" tojson("),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("k1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.sql_row.k1.rows\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("kall")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.sql_row.kall.rows\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(")\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ rm -rf /tmp/sqlite3.db\n$ sqlite3 /tmp/sqlite3.db "create table kvdb (key string primary key, value string);\'\n$ sqlite3 /tmp/sqlite3.db "insert into kvdb (key, value) values (\'k1\',\'v1\'),(\'k2\',\'v2\'),(\'k3\',\'v3\');"\n\n$ runflow run sqlite3_row.hcl --var db=/tmp/out.db\n[2021-06-12 23:25:56,188] "task.sqlite3_row.k1" is started.\n[2021-06-12 23:25:56,191] "task.sqlite3_row.k1" is successful.\n[2021-06-12 23:25:56,192] "task.sqlite3_row.kall" is started.\n[2021-06-12 23:25:56,193] "task.sqlite3_row.kall" is successful.\n[2021-06-12 23:25:56,195] "task.command.echo" is started.\n{"k1": [{"key": "k1", "value": "v1"}], "kall": [{"key": "k1", "value": "v1"}, {"key": "k2", "value": "v2"}, {"key": "k3", "value": "k3"}]}\n[2021-06-12 23:25:56,207] "task.command.echo" is successful.\n')])])])]),t._v(" "),a("h2",{attrs:{id:"argument-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),a("p",[t._v("The following arguments are supported:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("dsn")]),t._v(" - (Required, str) The DSN is a string of URL, which provides")]),t._v(" "),a("ul",[a("li",[t._v("What kind of database are we communicating with?")]),t._v(" "),a("li",[t._v("What DBAPI are we using?")]),t._v(" "),a("li",[t._v("How do we locate the database?")])]),t._v(" "),a("p",[t._v("Some examples include")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("sqlite:///:memory:")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("sqlite:////tmp/test.db")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("sqlite+pysqlite:////tmp/test.db")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("mysql://${var.mysql_user}:${var.mysql_pass}@${var.mysql_host}/${var.mysql_db}")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("postgresql://scott:tiger@localhost/mydatabase")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("postgresql+psycopg2://scott:tiger@localhost/mydatabase")]),t._v(",")]),t._v(" "),a("li",[a("code",[t._v("mssql+pymssql://scott:tiger@hostname:port/dbname")]),t._v(".")])]),t._v(" "),a("p",[t._v("Please see more examples "),a("a",{attrs:{href:"https://docs.sqlalchemy.org/en/14/core/engines.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("sql")]),t._v(" - (Required, block) There can only be one sql blocks in a task.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("statement")]),t._v(" - (Required, str) The sql statement to execute.")]),t._v(" "),a("li",[a("code",[t._v("parameters")]),t._v(" - (Optional, list/map).\n"),a("ul",[a("li",[t._v("It can be a key-value pairs.")]),t._v(" "),a("li",[t._v("It can be a array of key-value pairs.")])])])])])]),t._v(" "),a("h2",{attrs:{id:"attributes-references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributes-references"}},[t._v("#")]),t._v(" Attributes References")]),t._v(" "),a("p",[t._v("The following attributes are supported:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("rows")]),t._v(" - List. Each list element is a map with table field as key and row record as value.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);