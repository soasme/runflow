(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{371:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"extend-runflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extend-runflow"}},[t._v("#")]),t._v(" Extend Runflow")]),t._v(" "),a("p",[t._v("It's impossible Runflow can provide all kinds of tasks you need.\nWhen that happens, you can develop your own task and let Runflow\nload it before a task run.")]),t._v(" "),a("p",[t._v("You will need to write some Python code and hook it up in a Runflow spec.")]),t._v(" "),a("h2",{attrs:{id:"import-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-flow"}},[t._v("#")]),t._v(" Import Flow")]),t._v(" "),a("p",[t._v("If you want to use a flow as part of a new flow, the best way is to import the flow directly.")]),t._v(" "),a("p",[t._v("Say we have a flow "),a("code",[t._v("examples/template.hcl")]),t._v(":")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the flow `examples/template.hcl`")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: template.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "global" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hcl2_template"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the source for the template.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can interpolate variable via `${...}` syntax.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token heredoc string"}},[t._v("<<EOT\n${ answer }\n${ final.answer }\n${ var.global }\n${ 40 + 2 }\n${ sum([20, 20, 2]) }\nEOT")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the context for the template rendering.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It will be merged with global context.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("context")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.hcl2_template.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])]),t._v(" "),a("p",[t._v("Now, we can import it using "),a("code",[t._v("import.tasks")]),t._v(". The import string for the "),a("code",[t._v(".hcl")]),t._v(" file should be a valid Python import string ending with "),a("code",[t._v(":flow")]),t._v(". The key for the import string will be the task type.")]),t._v(" "),a("p",[t._v("For example, the flow below registers "),a("code",[t._v("examples.template:flow")]),t._v(" as task type "),a("code",[t._v("custom_flow_run")]),t._v(". The payloads of the task body becomes the variables for the reused flow:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[t._v("flow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flow_as_task"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("tasks")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("custom_flow_run")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examples.template:flow"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom_flow_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the output")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/flow_as_task.hcl\n")])])])]),t._v(" "),a("h2",{attrs:{id:"import-task-and-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-task-and-function"}},[t._v("#")]),t._v(" Import Task and Function")]),t._v(" "),a("p",[t._v("You can import a custom Task class. The Task class must accept task payload as keyword arguments.")]),t._v(" "),a("p",[t._v("It must has "),a("code",[t._v("def run(self)")]),t._v(" or "),a("code",[t._v("async def run(self)")]),t._v(" method, which performs the actual task work.")]),t._v(" "),a("p",[t._v("The example below shows how to write something into a file.")]),t._v(" "),a("div",{staticClass:"language-py extra-class"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: examples/extensions.py")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GuessIceCreamTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" output\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Bingo, it is ')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("To load it in the Runflow spec, use "),a("code",[t._v("import.tasks")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: custom_task_type.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom_task_type"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `import.tasks` is a map.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The map key will become the task type used later.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The map value is the import string of task implementation.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("tasks")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("guess_ice_cream")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examples.extensions:GuessIceCreamTask"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `import.functions` is a map.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The map key will become the function name used later.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The map value is the import string of function.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("functions")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("randint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"random:randint"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "out" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guess_ice_cream"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("upper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vanilla"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("-"),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("output")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.out\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run custom_task_type.hcl --var out=/tmp/out.txt\n[2021-06-13 15:48:35,397] "task.guess_ice_cream.echo" is started.\n[2021-06-13 15:48:35,398] "task.guess_ice_cream.echo" is successful.\n\n$ cat /tmp/out.txt\nBingo, it is VANILLA-95\n')])])])]),t._v(" "),a("p",[t._v("Tips:")]),t._v(" "),a("ul",[a("li",[t._v("The Python code for the task must be in sys.path.")])]),t._v(" "),a("h2",{attrs:{id:"install-as-python-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-as-python-package"}},[t._v("#")]),t._v(" Install as Python Package")]),t._v(" "),a("p",[t._v("The other approach to register a new task class is through\nthe "),a("code",[t._v("entry_points")]),t._v(" facility provided by\n"),a("a",{attrs:{href:"https://setuptools.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("setuptools"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Let's demonstrate it through an example.")]),t._v(" "),a("p",[t._v("Create a new directory for your package:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /tmp/runflow_vanilla_example\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /tmp/runflow_vanilla_example\n")])])]),a("ul",[a("li",[t._v("Create virtual env.")]),t._v(" "),a("li",[t._v("Install "),a("code",[t._v("build")]),t._v(" for building your package.")]),t._v(" "),a("li",[t._v("Install "),a("code",[t._v("runflow")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ python3 -mvenv venv\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" venv/bin/activate\n$ pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -U build runflow\n")])])]),a("p",[t._v("Create some Python files:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("├── src\n│   └── runflow_vanilla_example\n│       ├── __init__.py\n│       └── tasks.py\n├── pyproject.toml\n└── setup.cfg\n")])])]),a("p",[t._v("Implement your Task class in "),a("code",[t._v("src/runflow_vanilla_example/tasks.py")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GuessIceCreamTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" output\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'w'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Bingo, it is ')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Export it in "),a("code",[t._v("src/runflow_vanilla_example/__init__.py")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tasks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" GuessIceCreamTask\n")])])]),a("p",[t._v("Create a new file "),a("code",[t._v("setup.cfg")]),t._v(" as required by setuptools:")]),t._v(" "),a("ul",[a("li",[t._v("Define the metadata for the package.")]),t._v(" "),a("li",[t._v("Define how to find the package source. In this example, we tell setuptool to find\nthe package source in the directory "),a("code",[t._v("src/")]),t._v(" and include all "),a("code",[t._v("runflow_vanilla_example")]),t._v(" source.")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" runflow_vanilla_example\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("version")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("author")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" Anybody\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("author_email")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" anybody@example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("description")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" An example package that demonstrates how to register a new task type to Runflow\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("package_dir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" src\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("packages")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" find:\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("options.packages.find")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("where")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" src\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n    runflow_vanilla_example\n    runflow_vanilla_example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("options.entry_points")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("runflow.tasks")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("guess_ice_cream")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" runflow_vanilla_example:GuessIceCreamTask\n")])])]),a("p",[t._v("If you look a close look at the last section, it means you register a new task type "),a("code",[t._v("guess_ice_cream")]),t._v(" which\nis implemented by the class "),a("code",[t._v("GuessIceCreamTask")]),t._v(" in package "),a("code",[t._v("runflow_vanilla_example")]),t._v(".")]),t._v(" "),a("p",[t._v("Create a new file "),a("code",[t._v("pyproject.toml")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("build-system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("requires")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setuptools>=42"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wheel"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("build-backend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setuptools.build_meta"')]),t._v("\n")])])]),a("p",[t._v("All source are prepared. Let's build:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ python -mbuild\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example/__init__.py'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example/tasks.py'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example-0.1.0.dist-info/METADATA'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example-0.1.0.dist-info/WHEEL'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example-0.1.0.dist-info/entry_points.txt'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example-0.1.0.dist-info/top_level.txt'")]),t._v("\nadding "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'runflow_vanilla_example-0.1.0.dist-info/RECORD'")]),t._v("\nremoving build/bdist.macosx-10.15-x86_64/wheel\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" dist/\nrunflow_vanilla_example-0.1.0.tar.gz\nrunflow_vanilla_example-0.1.0-py3-none-any.whl\n")])])]),a("p",[t._v("In the directory "),a("code",[t._v("dist/")]),t._v(", two new package files are created.")]),t._v(" "),a("p",[t._v("We can publish the package files to "),a("a",{attrs:{href:"https://pypi.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("pypi.org"),a("OutboundLink")],1),t._v(" using\n"),a("a",{attrs:{href:"https://twine.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("twine"),a("OutboundLink")],1),t._v(". The package will be\nthen open to the world.")]),t._v(" "),a("p",[t._v("But for now, let's skip the publish step and just install the package from a local file file to the venv.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ python -mpip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" runflow_vanilla_example-0.1.0-py3-none-any.whl\n")])])]),a("p",[t._v("After "),a("code",[t._v("runflow_vanilla_example")]),t._v(" gets installed, Runflow is able to automatically\npick it up and recognizes "),a("code",[t._v("guess_ice_cream")]),t._v(" as a valid task type.")]),t._v(" "),a("p",[t._v("Hooray!! 🎉")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: use_package.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use_package"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "out" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"guess_ice_cream"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("upper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vanilla"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("output")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.out\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run use_package.hcl --var "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("out")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/tmp/out.txt\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-24 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":02:05,109"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.guess_ice_cream.echo"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-24 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":02:05,111"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.guess_ice_cream.echo"')]),t._v(" is successful.\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /tmp/out.txt\nBingo, it is VANILLA\n")])])])]),t._v(" "),a("h2",{attrs:{id:"request-to-include-your-implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-to-include-your-implementation"}},[t._v("#")]),t._v(" Request to Include Your Implementation")]),t._v(" "),a("p",[t._v("Alternatively, you can issue a new PR to Runflow GitHub repo and\nrequest to be included in "),a("code",[t._v("runflow.registry:task_implementations")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"which-approach-should-i-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#which-approach-should-i-use"}},[t._v("#")]),t._v(" Which Approach Should I Use?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("If you're experimenting something and have "),a("code",[t._v(".hcl")]),t._v(" and "),a("code",[t._v(".py")]),t._v(" files\nin one project, just use "),a("code",[t._v("import")]),t._v(" block.")])]),t._v(" "),a("li",[a("p",[t._v("If you have pretty solid task implementations and have some tests,\ndocs, consider package all of them and publish to PyPI.\nThis is the most recommended approach.")])]),t._v(" "),a("li",[a("p",[t._v("If you think your implementation is very fundamental and deserved\nto reside in "),a("code",[t._v("runflow")]),t._v(" core library, just send out a PR and let's\nreview if it works!")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);