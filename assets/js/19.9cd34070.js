(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{377:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"quickstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quickstart"}},[t._v("#")]),t._v(" Quickstart")]),t._v(" "),a("p",[t._v("Assume you have followed "),a("RouterLink",{attrs:{to:"/installation.html"}},[t._v("Installation")]),t._v(" to set your project up and\ninstalled Runflow.")],1),t._v(" "),a("h2",{attrs:{id:"a-minimal-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-minimal-flow"}},[t._v("#")]),t._v(" A Minimal Flow")]),t._v(" "),a("p",[t._v("A minimal flow looks something like this:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello.hcl")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Define a flow naming as "hello".')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# There can only be only one flow declaration per flow file.")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The task defines what should be done.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In this example, we run a bash command `echo`.")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'hello world'\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Save it as "),a("code",[t._v("hello.hcl")]),t._v(" or something similar.")]),t._v(" "),a("p",[t._v("Let's break down the code.")]),t._v(" "),a("ol",[a("li",[t._v("First we define a "),a("code",[t._v("flow")]),t._v(" block with the name "),a("code",[t._v('"hello-world"')]),t._v(".")]),t._v(" "),a("li",[t._v("Next we define a task with the run type "),a("code",[t._v('"bash_run"')]),t._v(" and the name "),a("code",[t._v('"echo"')]),t._v(".")]),t._v(" "),a("li",[t._v("We then let the task "),a("code",[t._v('"echo"')]),t._v(" do the actual work: "),a("code",[t._v("echo 'hello world'")]),t._v(".")])]),t._v(" "),a("p",[t._v("To run the flow, use the "),a("code",[t._v("runflow")]),t._v(" command or "),a("code",[t._v("python3 -m runflow")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run hello.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":51:04,151"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is started.\nhello world\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":51:04,158"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is successful.\n")])])]),a("h2",{attrs:{id:"flow-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flow-variables"}},[t._v("#")]),t._v(" Flow Variables")]),t._v(" "),a("p",[t._v("The flow can accept some dynamic variables:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello_vars.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello_vars"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "greeter" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("required")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'hello "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v("greeter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Save it as "),a("code",[t._v("hello-vars.hcl")]),t._v(" or something similar.")]),t._v(" "),a("p",[t._v("Comparing to "),a("code",[t._v("hello.hcl")]),t._v(":")]),t._v(" "),a("ol",[a("li",[t._v("First we introduced a "),a("code",[t._v("variable")]),t._v(" block with the name "),a("code",[t._v("greeter")]),t._v(".")]),t._v(" "),a("li",[t._v("Next we say the variable has a default value "),a("code",[t._v('"world"')]),t._v(".")]),t._v(" "),a("li",[t._v("We then let the task "),a("code",[t._v('"echo"')]),t._v(" say hello to the greeter: "),a("code",[t._v("echo 'hello ${var.greeter}'")]),t._v(".\nThe syntax "),a("code",[t._v("${var.REPLACE_THIS_WITH_A_VARIABLE_NAME}")]),t._v(" makes sure the content will be\ndynamically interpolated during the task run.")])]),t._v(" "),a("p",[t._v("To run the flow with the default variables:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run hello-vars.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":36:10,486"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is started.\nhello world\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":36:10,496"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is successful.\n")])])]),a("p",[t._v("To provide the task run with a different variable, use "),a("code",[t._v("--var")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run hello-vars.hcl --var "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("runflow\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":36:27,477"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is started.\nhello runflow2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":36:27,489"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is successful.\n")])])]),a("p",[t._v("Runflow variables can be managed using Environment Variables. The naming convention is "),a("code",[t._v("RUNFLOW_VAR_{varname}")]),t._v(".\nIn this case:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("RUNFLOW_VAR_greeter")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("runflow\n$ runflow run hello-vars.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":35:54,076"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is started.\nhello runflow\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-13 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":35:54,086"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.bash_run.echo"')]),t._v(" is successful.\n")])])]),a("p",[t._v("If both Environment Variables and "),a("code",[t._v("--var")]),t._v(" are provided, "),a("code",[t._v("--var")]),t._v(" takes precedence.")]),t._v(" "),a("h2",{attrs:{id:"task-dependency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-dependency"}},[t._v("#")]),t._v(" Task Dependency")]),t._v(" "),a("p",[t._v("The flow can have multiple tasks, each may depending on another.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello-deps.rf")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-deps"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'hello "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bash_run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'\"")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("_depends_on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      task.bash_run.greeter\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxd -l16 -ps /dev/urandom"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("Save it as "),a("code",[t._v("hello-deps.hcl")]),t._v(" or something similar.")]),t._v(" "),a("p",[t._v("Comparing it to "),a("code",[t._v("hello-vars.hcl")]),t._v(":")]),t._v(" "),a("ol",[a("li",[t._v("First we replace "),a("code",[t._v("greeter")]),t._v(" to a task with command "),a("code",[t._v("xxd -l16 -ps /dev/urandom")]),t._v(". If you're curious what this would do, try it on your console - it will display some random alphabet digits.")]),t._v(" "),a("li",[t._v("Next we replace "),a("code",[t._v("${var.greeter}")]),t._v(" to "),a("code",[t._v("${task.bash_run.greeter.stdout}")]),t._v(". It chains the greeter command's stdout to the "),a("code",[t._v("echo")]),t._v(" command.")]),t._v(" "),a("li",[t._v("At last we add a "),a("code",[t._v("_depends_on")]),t._v(" parameter, which explicitly declares the "),a("code",[t._v("echo")]),t._v(" command depends on "),a("code",[t._v("task.bash_run.greeter")]),t._v(". It makes sure "),a("code",[t._v("echo")]),t._v(" command only run after "),a("code",[t._v("greeter")]),t._v(" is successfully run.")])]),t._v(" "),a("p",[t._v("Let's run it with "),a("code",[t._v("runflow run")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":31:06,080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" is started.\naff8e7f9b236ef1f436c9f5ce4b9d532\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":31:06,090"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":31:06,092"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is started.\nhello aff8e7f9b236ef1f436c9f5ce4b9d532\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-06 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":31:06,098"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is successful.\n")])])]),a("p",[t._v("As your can see in the output above, despite of "),a("code",[t._v("greeter")]),t._v(" being declared beneath "),a("code",[t._v("echo")]),t._v(" block, it gets executed first.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Any argument starts with an underscore ("),a("code",[t._v("_")]),t._v(") is used by Runflow, not by the task.")])]),t._v(" "),a("h2",{attrs:{id:"implicit-task-dependency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implicit-task-dependency"}},[t._v("#")]),t._v(" Implicit Task Dependency")]),t._v(" "),a("p",[t._v("To make your life easier, Runflow is smart enough to detect the implicit task dependencies if task references are used in other tasks.")]),t._v(" "),a("p",[t._v("For example, "),a("code",[t._v("hello-deps.hcl")]),t._v(" does not need "),a("code",[t._v("_depends_on")]),t._v(" block at all, because the template variable "),a("code",[t._v("${task.bash_run.greeter.stdout}")]),t._v(' makes it very clear that task "echo" relies on task "greeter".')]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello-implicit-deps.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-implicit-deps"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'hello "),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bash_run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("greeter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v("'\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxd -l16 -ps /dev/urandom"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Let's run it with "),a("code",[t._v("runflow run")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":11:56,782"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" is started.\nbbd43baa501af05103cdd1ea2e6d9ffa\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":11:56,798"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"greeter"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":11:56,800"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is started.\nhello bbd43baa501af05103cdd1ea2e6d9ffa\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-07 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":11:56,806"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" is successful.\n")])])]),a("h2",{attrs:{id:"conditional-trigger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conditional-trigger"}},[t._v("#")]),t._v(" Conditional Trigger")]),t._v(" "),a("p",[t._v("The values in task argument "),a("code",[t._v("_depends_on")]),t._v(" can be not just task references but also any values that can be tested with bool.")]),t._v(" "),a("p",[t._v("If any of the values in task argument "),a("code",[t._v("_depends_on")]),t._v(" is falsy, then the task will be canceled.")]),t._v(" "),a("p",[t._v("For example, the flow below only output "),a("code",[t._v("pyproject.toml")]),t._v(' only when version is greater than or equal to "0.6.0".')]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[t._v("flow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conditional_trigger"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "version" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.6.0"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyproject.toml"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.read.content\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("_depends_on")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      var.version >"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.6.0"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run (passed):")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run examples/conditional_trigger.hcl  --var version=0.1.0\n[2021-06-28 17:18:14,226] "task.file_read.read" is started.\n[2021-06-28 17:18:14,227] "task.file_read.read" is successful.\n[2021-06-28 17:18:14,227] "task.file_write.echo" is started.\n[build-system]\nrequires = [\n    "setuptools>=42",\n    "wheel"\n]\nbuild-backend = "setuptools.build_meta"\n[2021-06-28 17:18:14,227] "task.file_write.echo" is successful.\n')])])]),a("p",[t._v("Run (canceled):")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/conditional_trigger.hcl  --var "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(".0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-28 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":15:58,011"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.read"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-28 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":15:58,012"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.read"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-28 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":15:58,012"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.echo"')]),t._v(" is canceled due to falsy deps.\n")])])])]),t._v(" "),a("h2",{attrs:{id:"retry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retry"}},[t._v("#")]),t._v(" Retry")]),t._v(" "),a("p",[t._v("A task can have an optional argument "),a("code",[t._v("_retry")]),t._v(" to control the retry behavior in case of execution failure.")]),t._v(" "),a("p",[t._v("To stop the retry after several attempts or several seconds, use "),a("code",[t._v("_retry.stop_after")]),t._v(". The value of "),a("code",[t._v("stop_after")]),t._v(" is a string in form of "),a("code",[t._v("M seconds")]),t._v(", or "),a("code",[t._v("N times")]),t._v(", or "),a("code",[t._v("M seconds | N times")]),t._v(" (either M seconds or N times).")]),t._v(" "),a("p",[t._v("To control the waiting periods between each retry, use "),a("code",[t._v("_retry.wait")]),t._v(". The value of "),a("code",[t._v("wait")]),t._v(" should be like function calls below:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("wait_fixed(N)")]),t._v(": wait fixed amount of seconds.")]),t._v(" "),a("li",[a("code",[t._v("wait_random(M, N)")]),t._v(": wait random amount of seconds.")]),t._v(" "),a("li",[a("code",[t._v("wait_fixed(N) + wait_random(M, N)")]),t._v(": wait fixed amount of seconds plus some jitter seconds.")]),t._v(" "),a("li",[a("code",[t._v("wait_exponential(M, N, O)")]),t._v(": wait 2 ^ x * N seconds between each retry starting with N seconds, then up to O seconds, then O seconds afterwards.")]),t._v(" "),a("li",[a("code",[t._v("wait_chain([wait_fixed(N), wait_random(M, N), ...])")]),t._v(": chain various wait behavior for each retry.")])]),t._v(" "),a("p",[t._v("Example usage:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[t._v("flow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"retry"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_request"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8000"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("_retry")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("stop_after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10 seconds"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("wait")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" wait_fixed("),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(")\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/retry.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-02 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":40:10,640"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.http_request.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-02 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":40:22,793"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.http_request.this"')]),t._v(" is failed.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("truncated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhttpx.ConnectError: All connection attempts failed\n")])])])]),t._v(" "),a("h2",{attrs:{id:"timeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timeout"}},[t._v("#")]),t._v(" Timeout")]),t._v(" "),a("p",[t._v("A task can have an optional argument "),a("code",[t._v("_timeout")]),t._v(" to control the maximum execution time. The task will wait until the execution is actually canceled, so the total wait time may exceed the "),a("code",[t._v("_timeout")]),t._v(".")]),t._v(" "),a("p",[t._v("The value should be a number.")]),t._v(" "),a("p",[t._v("Example usage:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[t._v("flow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timeout"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_request"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("url")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://github.com"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/timeout.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":18:30,344"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.http_request.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":18:30,404"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.http_request.this"')]),t._v(" is failed.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("truncated"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nasyncio.exceptions.TimeoutError\n")])])])]),t._v(" "),a("p",[t._v("Some task types support fine tuning timeouts.\nFor example, "),a("code",[t._v("http_request")]),t._v(" can set argument "),a("code",[t._v("timeout")]),t._v(" to a map.\nFor those task types don't have timeout arguments, the generic "),a("code",[t._v("_timeout")]),t._v(" should be used.")]),t._v(" "),a("h2",{attrs:{id:"import-another-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-another-flow"}},[t._v("#")]),t._v(" Import Another Flow")]),t._v(" "),a("p",[t._v("If you want to use a flow as part of a new flow, the best way is to import it.")]),t._v(" "),a("p",[t._v("Say we have a flow "),a("code",[t._v("examples/template.hcl")]),t._v(":")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the flow `examples/template.hcl`")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: template.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"template"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "global" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hcl2_template"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the source for the template.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You can interpolate variable via `${...}` syntax.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token heredoc string"}},[t._v("<<EOT\n${ answer }\n${ final.answer }\n${ var.global }\n${ 40 + 2 }\n${ sum([20, 20, 2]) }\nEOT")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set the context for the template rendering.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It will be merged with global context.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("context")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("answer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.hcl2_template.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])]),t._v(" "),a("p",[t._v("Now, we can import it using "),a("code",[t._v("import.tasks")]),t._v(". The import string for the "),a("code",[t._v(".hcl")]),t._v(" file should be a valid Python import string ending with "),a("code",[t._v(":flow")]),t._v(". The key for the import string will be the task type.")]),t._v(" "),a("p",[t._v("For example, the flow below registers "),a("code",[t._v("examples.template:flow")]),t._v(" as task type "),a("code",[t._v("custom_flow_run")]),t._v(". The payloads of the task body becomes the variables for the reused flow:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[t._v("flow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flow_as_task"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("tasks")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("custom_flow_run")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examples.template:flow"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom_flow_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the output")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/flow_as_task.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,513"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,513"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this > task.hcl2_template.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,513"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this > task.hcl2_template.this"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,514"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this > task.file_write.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,517"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this > task.file_write.this"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-07-04 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(":57:24,517"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.custom_flow_run.this"')]),t._v(" is successful.\n")])])])]),t._v(" "),a("h2",{attrs:{id:"next-to-read"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-to-read"}},[t._v("#")]),t._v(" Next to Read")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/concepts.html"}},[t._v("Concepts")])],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);