(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{381:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"file-read-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-read-task"}},[t._v("#")]),t._v(" File Read Task")]),t._v(" "),a("p",[t._v("File Read task enables reading content from a file.")]),t._v(" "),a("p",[t._v("Added in v0.3.0.")]),t._v(" "),a("p",[t._v("Runflow supports various file systems by setting an optional "),a("code",[t._v("fs")]),t._v(" attribute,\nsuch as GitHub, FTP, SFTP, Arrow HDFS, HTTP, Zip, local Git repo, SMB, etc.\nCheck more information "),a("a",{attrs:{href:"https://filesystem-spec.readthedocs.io/en/latest/api.html#built-in-implementations",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Added in v0.5.1.")]),t._v(" "),a("h2",{attrs:{id:"example-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),a("p",[t._v("Set "),a("code",[t._v("filename")]),t._v(" to the path to the file.")]),t._v(" "),a("p",[t._v("You can use "),a("code",[t._v("task.file_read.TASK_NAME.content")]),t._v(" in another task.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyproject.toml"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tojson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run file_read.hcl\n[2021-06-12 19:40:56,276] Task "this" is started.\n[2021-06-12 19:40:56,279] Task "this" is successful.\n[2021-06-12 19:40:56,281] Task "this" is started.\n"[build-system]\nrequires = [\n    \\"setuptools\\u003e=42\\",\n    \\"wheel\\"\n]\nbuild-backend = \\"setuptools.build_meta\\"\n"\n[2021-06-12 19:40:56,292] Task "this" is successful.\n')])])])]),t._v(" "),a("h2",{attrs:{id:"read-base64-encoded-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#read-base64-encoded-content"}},[t._v("#")]),t._v(" Read Base64-Encoded Content")]),t._v(" "),a("p",[t._v("You can use "),a("code",[t._v("b64content")]),t._v(" to get the base64-encoded content.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read_b64.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read_b64"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyproject.toml"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b64content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run file_read_b64.hcl\n[2021-07-02 14:38:57,059] "task.file_read.this" is started.\n[2021-07-02 14:38:57,060] "task.file_read.this" is successful.\n[2021-07-02 14:38:57,060] "task.bash_run.this" is started.\nbW2J1aWxkLXN5c3RlbV0KcmVxdWlyZXMgPSBbCiAgICAic2V0dXB0b29scz49NDIiLAogICAgIndoZWVsIgpdCmJ1aWxkLWJhY2tlbmQgPSAic2V0dXB0b29scy5idWlsZF9tZXRhIgo=\n[2021-07-02 14:38:57,069] "task.bash_run.this" is successful.\n')])])])]),t._v(" "),a("h2",{attrs:{id:"file-not-found"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-not-found"}},[t._v("#")]),t._v(" File Not Found")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("filename")]),t._v(" is not a file or not found, an error occurs.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__nonexist__.toml"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run file_read_failed.hcl\n[2021-06-12 19:41:37,131] Task "this" is started.\n[2021-06-12 19:41:37,132] Task "this" is failed.\nTraceback (most recent call last):\n... (truncated)\nFileNotFoundError: [Errno 2] No such file or directory: \'__nonexist__.toml\'\n')])])])]),t._v(" "),a("h2",{attrs:{id:"argument-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),a("p",[t._v("The following arguments are supported:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("filename")]),t._v(" - (Required, str) The path to file to read.")]),t._v(" "),a("li",[a("code",[t._v("fs")]),t._v(" - (Optional, map) The file system that contains the file to read. If not set, local filesystem is used. Please check the filesystem for the arguments to set in the map:\n"),a("ul",[a("li",[a("a",{attrs:{href:"#local-filesystem"}},[t._v("Local FileSystem")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#ftp-filesystem"}},[t._v("FTP FileSystem")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#git-filesystem"}},[t._v("Git FileSystem")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#github-filesystem"}},[t._v("GitHub FileSystem")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#zip-filesystem"}},[t._v("Zip FileSystem")])]),t._v(" "),a("li",[t._v("More documentations for the other filesystems are on the way. 😄")])])])]),t._v(" "),a("h3",{attrs:{id:"local-filesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-filesystem"}},[t._v("#")]),t._v(" Local FileSystem")]),t._v(" "),a("p",[t._v("This filesystem allows reading content from a local file.\nIf "),a("code",[t._v("fs")]),t._v(" is not given, this filesystem is used by default.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("protocol")]),t._v(" - (Required, str) "),a("code",[t._v('"local"')]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("auto_mkdir")]),t._v(" - (Optional, bool) Whether to auto create the parent directories (if not exist) when opening a file.")])]),t._v(" "),a("p",[t._v("Example usage:")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pyproject.toml"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo '),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tojson")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run file_read.hcl\n[2021-06-12 19:40:56,276] Task "this" is started.\n[2021-06-12 19:40:56,279] Task "this" is successful.\n[2021-06-12 19:40:56,281] Task "this" is started.\n"[build-system]\nrequires = [\n    \\"setuptools\\u003e=42\\",\n    \\"wheel\\"\n]\nbuild-backend = \\"setuptools.build_meta\\"\n"\n[2021-06-12 19:40:56,292] Task "this" is successful.\n')])])])]),t._v(" "),a("h3",{attrs:{id:"ftp-filesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ftp-filesystem"}},[t._v("#")]),t._v(" FTP FileSystem")]),t._v(" "),a("p",[t._v("This filesystem allows reading content from an FTP server.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("protocol")]),t._v(" - (Required, str) "),a("code",[t._v('"ftp"')]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("host")]),t._v(" - (Required, str) The FTP host to connect.")]),t._v(" "),a("li",[a("code",[t._v("port")]),t._v(" - (Required, int) The FTP port to connect.")]),t._v(" "),a("li",[a("code",[t._v("username")]),t._v(" - (Optional, str) The username for authentication.")]),t._v(" "),a("li",[a("code",[t._v("password")]),t._v(" - (Optional, str) The password for authentication.")]),t._v(" "),a("li",[a("code",[t._v("acct")]),t._v(' - (Optional, str) The "account" string for authentication. Some servers may need an additional "account" string for authentication.')]),t._v(" "),a("li",[a("code",[t._v("block_size")]),t._v(" - (Optional, int) The read-ahead or write buffer size.")]),t._v(" "),a("li",[a("code",[t._v("tempdir")]),t._v(" - (Optional, str) The directory on the FTP remote host to put temporary files on a transaction.")]),t._v(" "),a("li",[a("code",[t._v("timeout")]),t._v(" - (Optional, int) Timeout on an FTP connection in seconds.")])]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read_from_ftp.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read_from_ftp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "ftp_host" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "ftp_port" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "ftp_username" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"anon"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),a("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "ftp_password" ')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index.md"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Set fs.protocol to "ftp"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ftp"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set arguments for ftp connection")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.ftp_host\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("port")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.ftp_port\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set arguments for authentication")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.ftp_username\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("password")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.ftp_password\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# set timeout")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Output to the console")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"github-filesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-filesystem"}},[t._v("#")]),t._v(" GitHub FileSystem")]),t._v(" "),a("p",[t._v("This filesystem allows reading content from GitHub "),a("code",[t._v("org/repo")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("protocol")]),t._v(" - (Required, str) "),a("code",[t._v('"github"')]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("org")]),t._v(" - (Required, str) The GitHub organization.")]),t._v(" "),a("li",[a("code",[t._v("repo")]),t._v(" - (Required, str) The GitHub repository.")]),t._v(" "),a("li",[a("code",[t._v("sha")]),t._v(" - (Optional, str) The Git SHA, such as git commit hash"),a("code",[t._v("d2f4db")]),t._v(", git tag "),a("code",[t._v("v0.5.0")]),t._v(", git branch "),a("code",[t._v("main")]),t._v(", etc.")]),t._v(" "),a("li",[a("code",[t._v("username")]),t._v(" - (Optional, str) The username for authorization.")]),t._v(" "),a("li",[a("code",[t._v("token")]),t._v(" - (Optional, str) The token for authorization. For accessing private repos, you must provide a token. The token can be made at "),a("a",{attrs:{href:"https://github.com/settings/tokens",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/settings/tokens"),a("OutboundLink")],1),t._v(".")])]),t._v(" "),a("p",[t._v("Example usage:")]),t._v(" "),a("p",[t._v("This flow reads the content of file\n"),a("a",{attrs:{href:"https://github.com/soasme/runflow/blob/v0.5.0/requirements-dev.txt",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v('"requirements-dev.txt"')]),a("OutboundLink")],1),t._v("\nfrom GitHub repo "),a("a",{attrs:{href:"https://github.com/soasme/runflow",target:"_blank",rel:"noopener noreferrer"}},[t._v("soasme/runflow"),a("OutboundLink")],1),t._v(" with tag "),a("code",[t._v("v0.5.0")]),t._v("\nand outputs to the console.")]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read_from_github.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read_from_github"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requirements-dev.txt"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Set fs.protocol to "github"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set fs.org to the github organization")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("org")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"soasme"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set fs.repo to the github repository")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("repo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runflow"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set fs.sha to a valid Git sha, such as hash, tag, branch, HEAD, etc.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is optional.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("sha")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v0.5.0"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Output to the console")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('$ runflow run examples/file_read_from_github.hcl\n[2021-06-22 16:09:07,594] "task.file_read.this" is started.\n[2021-06-22 16:09:08,069] "task.file_read.this" is successful.\n[2021-06-22 16:09:08,070] "task.file_write.this" is started.\nbuild\ntwine\npytest\npytest-cov\n[2021-06-22 16:09:08,071] "task.file_write.this" is successful.\n')])])])]),t._v(" "),a("h3",{attrs:{id:"git-filesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-filesystem"}},[t._v("#")]),t._v(" Git FileSystem")]),t._v(" "),a("p",[t._v("This filesystem allows reading content from a local Git repo.\nThe main difference between it and "),a("a",{attrs:{href:"#local-filesystem"}},[t._v("Local FileSystem")]),t._v(" is it\nallows grabbing file content tracked in Git history.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("protocol")]),t._v(" - (Required, str) "),a("code",[t._v('"git"')]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("path")]),t._v(" - (Optional, str) The path to the local Git repo. Defaults to current directory if not given.")]),t._v(" "),a("li",[a("code",[t._v("ref")]),t._v(" - (Optional, str) The Git SHA, such as git commit hash"),a("code",[t._v("d2f4db")]),t._v(", git tag "),a("code",[t._v("v0.5.0")]),t._v(", git branch "),a("code",[t._v("main")]),t._v(", etc. Defaults to the current tree.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The functionality requires installing package "),a("code",[t._v("pygit2")]),t._v(".")])]),t._v(" "),a("p",[t._v('For example, this flow reads "requirements-dev.txt" from the git repo.')]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read_from_git.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read_from_git"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requirements-dev.txt"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Set fs.protocol to "git"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set fs.path to the path to the git repo.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set fs.ref to a valid Git sha, such as hash, tag, branch, HEAD, etc.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is optional.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("ref")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"26551afd8"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pygit2\n\n$ runflow run examples/file_read_from_git.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":15:01,124"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":15:01,127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.this"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":15:01,128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is started.\nbuild\ntwine\npytest\npytest-cov\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":15:01,129"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is successful.\n")])])])]),t._v(" "),a("h3",{attrs:{id:"zip-filesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zip-filesystem"}},[t._v("#")]),t._v(" Zip FileSystem")]),t._v(" "),a("p",[t._v("This filesystem allows reading content from a zip archive.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("protocol")]),t._v(" - (Required, str) "),a("code",[t._v('"zip"')]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("fo")]),t._v(" - (Required, str) The file object that contains zip.")]),t._v(" "),a("li",[a("code",[t._v("mode")]),t._v(" - (Optional, str) The file open mode. Defaults to "),a("code",[t._v('"r"')]),t._v(". Currently, only "),a("code",[t._v('"r"')]),t._v(" is accepted.")])]),t._v(" "),a("p",[t._v('For example, this flow read the content of file "hello.hcl" in zip archive "hello.hcl.zip".')]),t._v(" "),a("div",{staticClass:"language-hcl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: file_read_from_zip.hcl")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read_from_zip"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello.hcl"')]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Set fs.protocol to "zip"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zip"')]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The file object that contains zip.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("fo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"examples/hello.hcl.zip"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Output to the console")]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/stdout"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.this.content\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Click me to view the run output")]),t._v(" "),a("p",[t._v("Run:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ runflow run examples/file_read_from_zip.hcl\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":28:15,591"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":28:15,592"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_read.this"')]),t._v(" is successful.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":28:15,592"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is started.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello_world.hcl")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# This declares a flow as "hello_world".')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# There can only be only one flow declaration per flow file.")]),t._v("\nflow "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello_world"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A task defines what should be done on the host.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# In this example, we use "task_run" to run an echo command.')]),t._v("\n  task "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo 'hello world'\"")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),t._v("-06-22 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(":28:15,592"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.file_write.this"')]),t._v(" is successful.\n")])])])]),t._v(" "),a("h2",{attrs:{id:"attributes-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attributes-reference"}},[t._v("#")]),t._v(" Attributes Reference")]),t._v(" "),a("p",[t._v("The following attributes are supported:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("content")]),t._v(" - The file content.")]),t._v(" "),a("li",[a("code",[t._v("b64content")]),t._v(" - The file content encoded in base64 format.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);