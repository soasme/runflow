(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{385:function(t,s,e){"use strict";e.r(s);var a=e(44),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http-request-task"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-request-task"}},[t._v("#")]),t._v(" Http Request Task")]),t._v(" "),e("p",[t._v("Http Request Task enables fetching data from an http url.")]),t._v(" "),e("p",[t._v("Added in v0.4.0.")]),t._v(" "),e("h2",{attrs:{id:"basic-usage-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage-get"}},[t._v("#")]),t._v(" Basic Usage (GET)")]),t._v(" "),e("ul",[e("li",[t._v("Task type: "),e("code",[t._v("http_request")])]),t._v(" "),e("li",[t._v("Provide method, url, timeout, headers, params.")])]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: http_get.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_get"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),e("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "out" ')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_request"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("method")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("url")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.github.com/repos/soasme/runflow"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("headers")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Accept"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/vnd.github.v3+json"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("timeout")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.out\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.http_request.this.response.text\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ runflow run http_get.hcl --var out=/tmp/out.txt\n[2021-06-12 21:44:06,597] "task.http_request.this" is started.\n[2021-06-12 21:44:07,461] "task.http_request.this" is successful.\n[2021-06-12 21:44:07,478] "task.file_write.this" is started.\n[2021-06-12 21:44:07,481] "task.file_write.this" is successful.\n\n$ jq \'[.name, .full_name]\' /tmp/out.txt\n[\n  "runflow",\n  "soasme/runflow"\n]\n')])])])]),t._v(" "),e("h2",{attrs:{id:"basic-usage-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-usage-post"}},[t._v("#")]),t._v(" Basic Usage (POST)")]),t._v(" "),e("ul",[e("li",[t._v("Task type: "),e("code",[t._v("http_request")])]),t._v(" "),e("li",[t._v("Provide method, url, timeout, headers, json or data (can only provide one of json or data).")])]),t._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: http_post.hcl")]),t._v("\nflow "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_post"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("variable"),e("span",{pre:!0,attrs:{class:"token type variable"}},[t._v(' "out" ')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_read"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"README.md"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http_request"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("method")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("url")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.github.com/markdown"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("headers")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Accept"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/vnd.github.v3+json"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("json")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"text"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.file_read.this.content\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("timeout")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  task "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file_write"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("filename")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" var.out\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" task.http_request.this.response.text\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Click me to view the run output")]),t._v(" "),e("p",[t._v("Run:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('$ runflow run http_post.hcl --var out=/tmp/out.txt\n[2021-06-12 21:50:00,090] "task.file_read.this" is started.\n[2021-06-12 21:50:00,092] "task.file_read.this" is successful.\n[2021-06-12 21:50:00,193] "task.http_request.this" is started.\n[2021-06-12 21:50:01,053] "task.http_request.this" is successful.\n[2021-06-12 21:50:01,055] "task.file_write.this" is started.\n[2021-06-12 21:50:01,058] "task.file_write.this" is successful.\n\n$ cat /tmp/out.txt\n<h1>\n<a id="user-content-runflow" class="anchor" href="#runflow" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Runflow</h1>\n...(truncated)\n<p>Please report an issue at: <a href="https://github.com/soasme/runflow/issues">https://github.com/soasme/runflow/issues</a>.</p>\n')])])])]),t._v(" "),e("h2",{attrs:{id:"argument-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),e("p",[t._v("The following arguments are supported:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("method")]),t._v(" - (Required, str) The HTTP request method. One of "),e("code",[t._v('"GET"')]),t._v(", "),e("code",[t._v('"POST"')]),t._v(", "),e("code",[t._v('"PUT"')]),t._v(", "),e("code",[t._v('"DELETE"')]),t._v(", "),e("code",[t._v('"PATCH"')]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("url")]),t._v(" - (Required, str) The HTTP request url.")]),t._v(" "),e("li",[e("code",[t._v("headers")]),t._v(" - (Optional, map) The HTTP request headers.")]),t._v(" "),e("li",[e("code",[t._v("json")]),t._v(" - (Optional, map) The HTTP request JSON data. Must not be used with "),e("code",[t._v("data")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("data")]),t._v(" - (Optional, map) The HTTP request form data. Must not be used with "),e("code",[t._v("json")]),t._v(".")]),t._v(" "),e("li",[e("code",[t._v("timeout")]),t._v(" - (Optional, int, float or map) The timeout on HTTP connection. It may be a number, or a map like "),e("code",[t._v('{ "timeout" : 10, "connect": 2, "read": 4, "write": 4, "pool": 1}')]),t._v(". In the map,\n"),e("ul",[e("li",[t._v("The "),e("code",[t._v("timeout")]),t._v(" specifies an overall timeout.")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("connect")]),t._v(" timeout specifies the maximum amount of time to wait until a socket connection to the requested host is established.")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("read")]),t._v(" timeout specifies the maximum duration to wait for a chunk of data to be received.")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("write")]),t._v(" timeout specifies the maximum duration to wait for a chunk of data to be sent.")]),t._v(" "),e("li",[t._v("The "),e("code",[t._v("pool")]),t._v(" timeout specifies the maximum duration to wait for acquiring a connection from the connection pool.")])])])]),t._v(" "),e("h2",{attrs:{id:"attributes-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#attributes-reference"}},[t._v("#")]),t._v(" Attributes Reference")]),t._v(" "),e("p",[t._v("The following attributes are supported:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("response")]),t._v(" - The "),e("a",{attrs:{href:"https://www.python-httpx.org/quickstart/",target:"_blank",rel:"noopener noreferrer"}},[t._v("httpx.Response object"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("p",[t._v("Here lists some possible variable references you may use in other tasks:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.content")]),t._v(" - Get HTTP response binary content.")]),t._v(" "),e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.encoding")]),t._v(" - Get HTTP response encoding.")]),t._v(" "),e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.text")]),t._v(" - Get HTTP response text.")]),t._v(" "),e("li",[e("code",[t._v('call(task.http_request.TASK_NAME.response, "json")')]),t._v(" - Get HTTP response json object.")]),t._v(" "),e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.status_code")]),t._v(" - Get HTTP response status code.")]),t._v(" "),e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.headers.content-type")]),t._v(" - Get HTTP response status code.")]),t._v(" "),e("li",[e("code",[t._v("task.http_request.TASK_NAME.response.cookies.session-id")]),t._v(" - Get HTTP response cookie.")])])])}),[],!1,null,null,null);s.default=n.exports}}]);