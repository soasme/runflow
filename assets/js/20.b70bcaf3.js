(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{378:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bash-run-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bash-run-task"}},[t._v("#")]),t._v(" Bash Run Task")]),t._v(" "),s("p",[t._v("Bash Run task enables running local command in a subprocess.")]),t._v(" "),s("h2",{attrs:{id:"example-usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-usage"}},[t._v("#")]),t._v(" Example Usage")]),t._v(" "),s("div",{staticClass:"language-hcl extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hcl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello-id.hcl")]),t._v("\nflow "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxd -l16 -ps /dev/urandom"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"optional-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optional-environment-variables"}},[t._v("#")]),t._v(" Optional Environment Variables")]),t._v(" "),s("p",[t._v("Command task supports optional environment variables through argument "),s("code",[t._v("env")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-hcl extra-class"},[s("pre",{pre:!0,attrs:{class:"language-hcl"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# File: hello-id-env.hcl")]),t._v("\nflow "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-id-env"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  task "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bash_run"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("command")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxd -l $LENGTH -ps /dev/urandom"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("env")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("LENGTH")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"16"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Whenever possible, instead of templating variables in the command, pass variables into the command using "),s("code",[t._v("env")]),t._v(".\n(Bash is quite tricky in some circumstances).")]),t._v(" "),s("h2",{attrs:{id:"argument-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#argument-reference"}},[t._v("#")]),t._v(" Argument Reference")]),t._v(" "),s("p",[t._v("The following arguments are supported:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("command")]),t._v(" - (Required, str) The command string.")]),t._v(" "),s("li",[s("code",[t._v("env")]),t._v(" - (Optional, map) The environment variables.")])]),t._v(" "),s("h2",{attrs:{id:"attributes-reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attributes-reference"}},[t._v("#")]),t._v(" Attributes Reference")]),t._v(" "),s("p",[t._v("The following attributes are supported:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("stdout")]),t._v(" - String. The output of command run.")]),t._v(" "),s("li",[s("code",[t._v("stderr")]),t._v(" - String. The error of command run.")]),t._v(" "),s("li",[s("code",[t._v("returncode")]),t._v(" - Int. The exit code of command run.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);